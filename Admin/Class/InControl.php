<?php


class InControl extends CoreA
{
    protected $db_log;
    public $db_login;
    protected $login;
    protected $password;
    public $random_byte;
    public $rand_byte;
    public $hash_cookie;
    public $hash_numb;

    public function get_admin()
    {
        parent::get_admin(); // TODO: Change the autogenerated stub
    }

//Получаем данные таблицы для администратора сайта.
    public function db_login()
    {
        $this->db_log = $this->db->prepare("SELECT * FROM admin_in WHERE id=1");
        $this->db_log->execute();
        $this->db_login = $this->db_log->fetchAll(PDO::FETCH_ASSOC);
        return $this->db_login;
    }

    // Получаем логин из БД
    public function authorization_login()
    {
        $this->login = md5(md5(md5($this->db_login[0]['login'])));
        return $this->login;
    }

    //Получаем пароль из БД
    public function authorization_pass()
    {
        $this->password = md5(md5(md5($this->db_login[0]['password'])));
        return $this->password;
    }

    //Получаем хеш номер из БД. Он для доп.безопасности. Формируется автоматически и рандомно.
    public function authorization_hash()
    {
        $this->hash_numb = $this->db_login[0]['hash_numbers'];
        return $this->hash_numb;
    }

    //Формируем и записываем хеш-номер в БД. Выводим его текущее значение.
    public function random_byte_autoriz()
    {
        $this->rand_byte = (bin2hex(random_bytes(10)));
        $this->random_byte = $this->db->prepare("UPDATE admin_in SET hash_numbers=:hash_numbers WHERE id=1");
        $this->random_byte->execute(array('hash_numbers' => "$this->rand_byte"));
        $this->hash_cookie = $this->db_login[0]['hash_numbers'];
        return $this->hash_cookie;
    }
}